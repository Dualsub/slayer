cmake_minimum_required(VERSION 3.0.0)
project(Slayer VERSION 0.1.0)
set(CMAKE_CXX_STANDARD 20)

# Dependencies
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/thirdparty)

set(SLAYER_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)

set(SLAYER_SRC
    src/Core/Main.cpp
    src/Core/Engine.cpp
    src/Core/Application.cpp
    src/Core/Layer.cpp
    src/Core/Log.cpp
    src/Core/CmdArgs.cpp
    src/Core/Window.cpp

    src/Rendering/RenderingManager.cpp
    src/Rendering/Renderer/Texture.cpp
    src/Rendering/Renderer/Mesh.cpp
    src/Rendering/Renderer/Model.cpp
    src/Rendering/Renderer/VertexArray.cpp
    src/Rendering/Renderer/SkeletalModel.cpp
    src/Rendering/Renderer/Buffer.cpp
    src/Rendering/Renderer/Camera.cpp
    src/Rendering/Renderer/Material.cpp
    src/Rendering/Renderer/EnvironmentMap.cpp
    src/Rendering/Renderer/Lights.cpp
    src/Rendering/Renderer/Framebuffer.cpp
    src/Rendering/Renderer/Renderer.cpp
    src/Rendering/Renderer/Shader.cpp
    src/Rendering/Renderer/ComputeShader.cpp

    src/Rendering/Animation/Animation.cpp

    src/Resources/AssetPack.cpp
    src/Resources/ResourceManager.cpp

    src/Input/Input.cpp
)

# file(GLOB_RECURSE SLAYER_SRC
# ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp
# ${CMAKE_CURRENT_SOURCE_DIR}/include/*.h
# )
add_library(Slayer STATIC ${SLAYER_SRC})

message("SLAYER_GAME_HEADERS: ${SLAYER_GAME_HEADERS}")

target_include_directories(Slayer PUBLIC
    ${SLAYER_INCLUDE_DIR}
    ${SLAYER_GENERATED_DIR}
    ${SLAYER_GAME_HEADERS}
)

target_link_libraries(Slayer PUBLIC
    glfw
    imgui
    glad
    glm
    yaml-cpp
    optick
)
